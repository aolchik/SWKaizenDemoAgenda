// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.239
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DemoAgenda.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class AdicaoDeEventoFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AdicaoEvento.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Adicao de Evento", "  Como usuário\r\n  Quero adicionar novos eventos\r\n  Para manter controle sobre meu" +
                    "s compromissos", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Adicao de Evento")))
            {
                DemoAgenda.AcceptanceTests.Features.AdicaoDeEventoFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Acessando o formulário de novo evento")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Adicao de Evento")]
        public virtual void AcessandoOFormularioDeNovoEvento()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Acessando o formulário de novo evento", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("que estou na \'página principal\'");
#line 8
    testRunner.When("eu clicar em \'Novo evento\'");
#line 9
    testRunner.Then("devo ser redirecionado para o formulário de \'Novo evento\'");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Rótulo"});
            table1.AddRow(new string[] {
                        "Data"});
            table1.AddRow(new string[] {
                        "Hora"});
            table1.AddRow(new string[] {
                        "Titulo"});
            table1.AddRow(new string[] {
                        "Local"});
            table1.AddRow(new string[] {
                        "Descricao"});
#line 10
    testRunner.And("o seguinte formulário deve ser exibido", ((string)(null)), table1);
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Preenchendo o formulário de novo evento")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Adicao de Evento")]
        public virtual void PreenchendoOFormularioDeNovoEvento()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Preenchendo o formulário de novo evento", ((string[])(null)));
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
    testRunner.Given("que estou no \'formulário de Novo evento\'");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Rótulo",
                        "Valor"});
            table2.AddRow(new string[] {
                        "Data",
                        "25/3/2012"});
            table2.AddRow(new string[] {
                        "Hora",
                        "12:00"});
            table2.AddRow(new string[] {
                        "Titulo",
                        "Aniversário do Zequinha"});
            table2.AddRow(new string[] {
                        "Local",
                        "Barranco"});
            table2.AddRow(new string[] {
                        "Descricao",
                        "Não esquecer do presente!"});
#line 20
    testRunner.When("preencher os campos da seguinte forma", ((string)(null)), table2);
#line 27
    testRunner.And("eu clicar em \'Salvar Evento\'");
#line 28
    testRunner.Then("o evento deve ser armazenado no sistema");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
